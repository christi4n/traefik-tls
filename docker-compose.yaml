version: "3.7"

x-networks: &networks
  networks:
    - cms

services:

  traefik:
    image: traefik:v2.3
    container_name: traefik_${PROJECT_NAME}
    command:
      - --providers.docker.network=${PROJECT_NAME}
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    depends_on:
      - docker-certs-tls
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/dynamic-conf.toml:/etc/traefik/dynamic-conf.toml:ro
      # Map certificates in dev-certs container
      - docker_certs:/certs:ro
    <<: *networks

  typo3:
    image: martinhelmich/typo3:10.4
    container_name: typo3_${PROJECT_NAME}
    links:
      - mariadb
    expose:
      - "80"
    <<: *networks
    labels:
      # Tell Traefik to expose this container
      - traefik.enable=true
      # URL HTTP
      - traefik.http.routers.typo3-http-${PROJECT_NAME}.rule=Host(`typo3.${DOMAIN_NAME}`)
      # URL HTTPS
      - traefik.http.routers.typo3-https-${PROJECT_NAME}.rule=Host(`typo3.${DOMAIN_NAME}`)
      # HTTP entrypoint
      - traefik.http.routers.typo3-http-${PROJECT_NAME}.entrypoints=web
      # HTTPS entrypoint
      - traefik.http.routers.typo3-https-${PROJECT_NAME}.entrypoints=web-secure
      # TLS activation
      - traefik.http.routers.typo3-https-${PROJECT_NAME}.tls=true
      # HTTP to HTTPS Redirect
      - traefik.http.routers.typo3-http-${PROJECT_NAME}.middlewares=redirect@file

  mariadb:
    image: mariadb:10.5
    container_name: mariadb_${PROJECT_NAME}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mariadb:/var/lib/mysql
    <<: *networks
    ports:
      - 13306:3306

  adminer:
    image: adminer:4.7
    container_name: adminer_${PROJECT_NAME}
    restart: always
    expose:
      - "8080"
    depends_on:
      - mariadb
    <<: *networks
    labels:
    # Explicitly tell Traefik to expose this container
    - traefik.enable=true
    # URL HTTP
    - traefik.http.routers.adminer-http-${PROJECT_NAME}.rule=Host(`adminer.${DOMAIN_NAME}`)
    # URL HTTPS
    - traefik.http.routers.adminer-https-${PROJECT_NAME}.rule=Host(`adminer.${DOMAIN_NAME}`)
    # Point d'entré web (http)
    - traefik.http.routers.adminer-http-${PROJECT_NAME}.entrypoints=web
    # Point d'entré web-secure (https)
    - traefik.http.routers.adminer-https-${PROJECT_NAME}.entrypoints=web-secure
    # Activation de TLS
    - traefik.http.routers.adminer-https-${PROJECT_NAME}.tls=true
    # HTTP to HTTPS Redirection
    - traefik.http.routers.adminer-http-${PROJECT_NAME}.middlewares=redirect@file

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog_${PROJECT_NAME}
    expose:
      - "8025"
    <<: *networks
    labels:
    # Explicitly tell Traefik to expose this container
    - traefik.enable=true
    # URL HTTP
    - traefik.http.routers.mailhog-http-${PROJECT_NAME}.rule=Host(`mailhog.${DOMAIN_NAME}`)
    # URL HTTPS
    - traefik.http.routers.mailhog-https-${PROJECT_NAME}.rule=Host(`mailhog.${DOMAIN_NAME}`)
    # Point d'entré web (http)
    - traefik.http.routers.mailhog-http-${PROJECT_NAME}.entrypoints=web
    # Point d'entré web-secure (https)
    - traefik.http.routers.mailhog-https-${PROJECT_NAME}.entrypoints=web-secure
    # Activation de TLS
    - traefik.http.routers.mailhog-https-${PROJECT_NAME}.tls=true
    # HTTP to HTTPS Redirection
    - traefik.http.routers.mailhog-http-${PROJECT_NAME}.middlewares=redirect@file

  docker-certs-tls:
    build:
      context: ./docker-certs/tls
    container_name: docker_certs_tls_${PROJECT_NAME}
    volumes:
      - docker_certs:/certs:rw

volumes:
  docker_certs: {}
  mariadb: {}

networks:
  cms:
    external: true